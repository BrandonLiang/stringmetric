buildscript {
	dependencies {
		classpath 'net.saliman:gradle-cobertura-plugin:2.0.0'
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.2.1'
	}
	repositories { mavenCentral() }
}

apply from: '../deploy.gradle'
apply plugin: 'cobertura'
apply plugin: 'coveralls'
apply plugin: 'scala'

cobertura.coverageFormats = ['html', 'xml']

compileScala { compileScala.scalaCompileOptions.additionalParameters = ['-target:jvm-1.6', 'â€“Xdisable-assertions'] }
compileTestScala { compileTestScala.scalaCompileOptions.additionalParameters = ['-target:jvm-1.6'] }

dependencies {
	compile'org.scala-lang:scala-compiler:2.10.2'
	compile 'org.scala-lang:scala-library:2.10.2'

	testCompile 'com.google.caliper:caliper:0.5-rc1'
	testCompile 'junit:junit:4.11'
	testCompile 'org.scalatest:scalatest_2.10:2.0.M5b'
}

sourceSets {
	benchmark {
		output.resourcesDir "${project.buildDir}/classes/benchmark"

		java { srcDir 'source/benchmark/java' }
		resources { srcDir 'source/benchmark/resource' }
		scala { srcDir 'source/benchmark/scala' }
	}
	main {
		output.resourcesDir "${project.buildDir}/classes/main"

		java { srcDir 'source/core/java' }
		resources { srcDir 'source/core/resource' }
		scala { srcDir 'source/core/scala' }
	}
	test {
		output.resourcesDir "${project.buildDir}/classes/test"

		java { srcDir 'source/test/java' }
		resources { srcDir 'source/test/resource' }
		scala { srcDir 'source/test/scala' }
	}
}
